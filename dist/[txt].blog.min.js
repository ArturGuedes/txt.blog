async function fetchFile(t){try{const e=await fetch(t);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.text()}catch(t){throw console.error("Erro ao carregar arquivo:",t),t}}function extractSimpleTag(t,e){const n=new RegExp(`^\\[${e}\\]\\s*(.+?)$`,"m"),o=t.match(n);return o?o[1].trim():""}function extractContentTag(t,e){const n=new RegExp(`\\[${e}\\]([\\s\\S]*?)^\\[\\/${e}\\]$`,"m"),o=t.match(n);return o?o[1].trim():""}function parsePost(t){return{title:extractSimpleTag(t,"t"),date:extractSimpleTag(t,"d"),author:extractSimpleTag(t,"a"),link:extractSimpleTag(t,"link"),thumb:extractSimpleTag(t,"thumb"),content:extractContentTag(t,"txt")}}function renderPost(t){return`\n    <article id="${t.title}" []-index="${t.index}">\n    ${t.thumb?`<img []-thumb src="${t.thumb}" alt="${t.title}">`:""}\n    <div []-post>\n    ${t.title?`<h1><a href="?id=${t.index}">${t.title}</a></h1>`:""}\n      <div []-meta>\n      ${t.date?`<span []-date>${t.date}</span>`:""}\n      ${t.author?`- <a []-author href="?author=${encodeURIComponent(t.author)}">${t.author}</a>`:""}\n      </div>\n      ${t.content?`<div []-content>${t.content}</div>`:""}\n      </div>\n    </article>\n  `}async function initBlog(t,{containerId:e="blog-root",debug:n=!1}){try{const o=await fetchFile(t);n&&console.log("[txt]blog: File content loaded successfully");const a=document.getElementById(e),r=new URLSearchParams(window.location.search),i=r.get("id"),s=r.get("author");let l=o.split(/\n--\n/).map(t=>t.trim()).filter(t=>t).map((t,e)=>({...parsePost(t),index:e}));if(null!==i){const t=parseInt(i,10);l=l.filter(e=>e.index===t),n&&console.log(`Filtering by id=${t}`,l)}null!==s&&(l=l.filter(t=>t.author&&t.author.toLowerCase().includes(s.toLowerCase())),n&&console.log(`Filtering by author=${s}`,l));const c=l.map(t=>renderPost(t)).filter(t=>t);return n&&console.log("Posts HTML:",c),a&&(a.innerHTML=c.join(""),l.length>1?(a.classList.add("multiple-posts"),a.classList.remove("single-post")):(a.classList.add("single-post"),a.classList.remove("multiple-posts"))),n&&console.log("[txt]blog:",{postsPath:t,containerId:e,hasContainer:!!a,posts:l}),l}catch(t){console.error("Falha ao inicializar blog:",t);const e=document.getElementById(config.containerId);e&&(e.innerHTML=`\n        <div class='feed'>\n          <h1>Erro</h1>\n          <p>Não foi possível carregar as postagens.</p>\n          <p><small>Detalhes: ${t.message}</small></p>\n        </div>\n      `)}}